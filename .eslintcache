[{"C:\\Users\\User\\ravenous\\src\\index.js":"1","C:\\Users\\User\\ravenous\\src\\reportWebVitals.js":"2","C:\\Users\\User\\ravenous\\src\\components\\App\\App.js":"3","C:\\Users\\User\\ravenous\\src\\components\\Business\\Business.js":"4","C:\\Users\\User\\ravenous\\src\\components\\BusinessList\\BusinessList.js":"5","C:\\Users\\User\\ravenous\\src\\components\\SearchBar\\SearchBar.js":"6","C:\\Users\\User\\ravenous\\src\\util\\Yelp.js":"7"},{"size":515,"mtime":1608014357887,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":1521,"mtime":1609382750672,"results":"11","hashOfConfig":"9"},{"size":1117,"mtime":1608899496703,"results":"12","hashOfConfig":"9"},{"size":495,"mtime":1609383317061,"results":"13","hashOfConfig":"9"},{"size":3448,"mtime":1609404231000,"results":"14","hashOfConfig":"9"},{"size":1670,"mtime":1609382135632,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1gn11vy",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\ravenous\\src\\index.js",[],["32","33"],"C:\\Users\\User\\ravenous\\src\\reportWebVitals.js",[],"C:\\Users\\User\\ravenous\\src\\components\\App\\App.js",[],"C:\\Users\\User\\ravenous\\src\\components\\Business\\Business.js",[],"C:\\Users\\User\\ravenous\\src\\components\\BusinessList\\BusinessList.js",[],"C:\\Users\\User\\ravenous\\src\\components\\SearchBar\\SearchBar.js",["34"],"import React from 'react';\nimport './SearchBar.css';\n\n\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n      super(props);\n\n      this.state = {\n        term: '',\n        location: '',\n        sortBy: 'best_match'\n      };\n\n      this.handleTermChange = this.handleTermChange.bind(this);\n      this.handleLocationChange = this.handleLocationChange.bind(this);\n      this.handleSearch = this.handleSearch.bind(this);\n      this.handleSortByChange = this.handleSortByChange.bind(this);\n\n      this.sortByOptions = {\n        'Best Match': 'best_match',\n        'Highest Rated': 'rating',\n        'Most Reviewed': 'review_count'\n      };\n  }\n\n  getSortByClass(sortByOption) {\n    // this is for the Active selected class sortByOption\n      if(this.state.sortBy === sortByOption) {\n        return 'active';\n      } else {\n        return '';\n      }\n  } \n\n  // changes the alighted/active click sortby option \n  handleSortByChange(sortByOption) {\n      this.setState({\n        sortBy: sortByOption\n      });\n  }\n\n  // what ever is inserted into the input box instantly changes the state.term\n  handleTermChange(event) {\n    // const text = event.target.value;\n      this.setState({\n        term: event.target.value // text\n      });\n  }\n\n  // what ever is inserted into the input box instantly changes the state.location\n  handleLocationChange(event) {\n       // const text = event.target.value;\n      this.setState({\n        location: event.target.value // text\n      });\n  }\n\n  // it accept what is typed into the inputs boxes \n  // and fired an event handler on the btn/ link tag\n  //  Let's Go event handler\n  handleSearch(event) {\n      this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n      event.preventDefault()\n      //this is  to prevent the default action of clicking a link \n      //from triggering at the end of the method. \n    }\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];// this will give us each key's value\n      return (\n            <li \n              onClick={this.handleSortByChange.bind(this, sortByOptionValue)} \n              className={this.getSortByClass(sortByOptionValue)} \n              key={sortByOptionValue}\n            >\n              {sortByOption}\n            </li>\n            );// {sortByOption} will give us each key's(not numerically) position\n      // up there since we are passing in an argument to the event \n      // handler/method we must \"bind\" it with \"this\" and the This will allow us \n      //to both bind to the current value of this (as we usually do in the constructor()) but also bind the \n      //current sortByOptionValue as the first argument to the method call, \n      //ensuring the method is called with the appropriate value when clicked. \n    });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input onChange={this.handleTermChange} placeholder=\"Search Businesses\" />\n          <input onChange={this.handleLocationChange} placeholder=\"Where?\" />\n        </div>\n        <div className=\"SearchBar-submit\">\n          <a onClick={this.handleSearch}>Let's Go</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;","C:\\Users\\User\\ravenous\\src\\util\\Yelp.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":103,"column":11,"nodeType":"41","endLine":103,"endColumn":42},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]